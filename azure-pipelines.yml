#pool:
#  vmImage: ubuntu-latest
#steps:
#STAGE SAST
trigger:
- main

pool: 
 vmImage: ubuntu-latest

stages:
- stage: SAST 
  jobs:
  - job: SAST
    displayName: 'Analisis SAST'
    steps: 
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        codeCoverageToolOption: 'JaCoCo'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'sonarcloud'
        organization: 'pguerra-final-job-devsecopsv4'
        scannerMode: 'MSBuild'
        projectKey: 'pguerra-final-job-devsecopsv4_spring-boot-kubernetes'
        projectName: 'spring-boot-kubernetes'

    - task: Maven@4
      displayName: 'Maven Sonar Cloud Analisys'
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: true
        sqMavenPluginVersionChoice: 'latest'

    - task: sonarcloud-buildbreaker@2
      inputs:
        SonarCloud: 'sonarcloud'
        organization: 'pguerra-final-job-devsecopsv4'
    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'
        displayName: 'Publish Analysis Results'


###########################################################################
#    - task: Maven@4
#      inputs:
#        gradleWrapperFile: 'gradlew'
#        tasks: 'sonarqube'
#        publishJUnitResults: true
#        testResultsFiles: '**/TEST-*.xml'
#        javaHomeOption: 'JDKVersion'
#        sonarQubeRunAnalysis: true
#        sqGradlePluginVersionChoice: 'specify'
#        sonarQubeGradlePluginVersion: '3.3'
#        spotBugsAnalysis: false
#        
#########################################################################



#STAGE SCA

- stage: SCA 
  jobs:
  - job: SCA
    displayName: 'SCA'
    steps:

    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - script: find $(Build.SourcesDirectory) -name "*.jar"
    - task: dependency-check-build-task@6
      inputs:
        projectName: 'scan-librerias'
        scanPath: '$(Build.SourcesDirectory)/target'
        format: 'ALL'
        reportsDirectory: '$(Build.SourcesDirectory)/dependency'
#    - script: |
#        variable=$(grep ",HIGH," $(Build.SourcesDirectory)/dependency/dependency-check-report.csv | wc -l)
#        echo $variable "HIGH Vulnerabilities detected with dependency-check"
#        if [ $variable -gt 0 ];
#        then 
#          echo "Stop pipeline execution because dependency check detected" $variable " > 0 HIGH Vulnerabilities"
#          exit 1;
#        fi;

###########################################################################################
#    - task: dependency-check-build-task@6
#      inputs:
#        projectName: 'scan-librerias'
#        scanPath: '$(Pipeline.Workspace)'
#        format: 'HTML'
###########################################################################################
# STAGE Container Securiyty

- stage: ContainerSecurity 
  jobs:
  - job: ContainerSecurity
    displayName: 'ContainerSecurity'
    steps:
   
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
#       codeCoverageToolOption: 'JaCoCo'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false


    - task: DockerInstaller@0
      inputs:
        dockerVersion: '17.09.0-ce'

    - task: Docker@2
      inputs:
        containerRegistry: 'Docker'
        command: 'login'

    - task: Docker@2
      inputs:
        containerRegistry: 'Docker'
        repository: 'pguerra-final-job-devsecopsv4/spring-boot-kubernetes'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        tags: 'latest'

    - script: |
        sudo apt-get install -y rpm
        wget https://github.com/aquasecurity/trivy/releases/download/v0.27.1/trivy_0.27.1_Linux-64bit.deb
        sudo dpkg -i trivy_0.27.1_Linux-64bit.deb
        trivy image pguerra-final-job-devsecopsv4/spring-boot-kubernetes:latest
#        trivy image -s "HIGH,CRITICAL" --exit-code 1 pguerra-final-job-devsecopsv4/spring-boot-kubernetes:latest
      displayName: Image Scan